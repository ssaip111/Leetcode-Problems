//O(n) 
public class Solution {
    public int[] ProductExceptSelf(int[] nums) {
        
        int temp = 1;
        int[] productValues = new int[nums.Length];
        for(int i=0; i<nums.Length; i++)
        {
            productValues[i] = temp;
            temp *= nums[i];
        } 
        
        temp =1;
        for(int i=nums.Length-1; i>=0; i--)
        {
            productValues[i] *= temp;
            temp *= nums[i];
        }
        
        return productValues;
    }
}    

//O(n) â€“ Another way
public class Solution {
    public int[] ProductExceptSelf(int[] nums) {
        
        int count =0;
        int product =1;
        for(int i=0;i<nums.Length; i++)
        {
            if(num[i] == 0)
                count++;
            else
                product *= nums[i];        
        }
        
        for(int i=0; i<nums.Length; i++)
        {
            if(count > 1 || (count == 1 && nums[i]!=0))
                nums[i] = 0;
            else if(count ==1 && nums[i] == 0)
                nums[i] = product;
            else 
                nums[i] = product/nums[i];
        }
    
        return nums;
    }
}
